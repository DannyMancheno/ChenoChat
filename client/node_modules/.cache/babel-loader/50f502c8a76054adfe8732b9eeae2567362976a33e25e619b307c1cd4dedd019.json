{"ast":null,"code":"// Authentication\n\nexport function requestAPI(method, url, data) {\n  return new Promise((resolve, reject) => {\n    console.log('start request');\n    let request = new XMLHttpRequest();\n    request.open(method, url);\n    request.setRequestHeader('Content-Type', 'application/json');\n    request.send(JSON.stringify(data));\n    request.onreadystatechange = function () {\n      console.log();\n      console.log('state change');\n    };\n    // request.onreadystatechange = ()=>{\n    //     console.log('??');\n    //     if(request.readyState === 4){\n    //         console.log('Finished');\n    //         console.log(request.status);\n    //         if(request.status === 201) resolve('Success!');\n    //         else reject('Failure :C');\n    //     }\n    // }\n    console.log('end request');\n  });\n}","map":{"version":3,"names":["requestAPI","method","url","data","Promise","resolve","reject","console","log","request","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","onreadystatechange"],"sources":["C:/Users/danny/Documents/HTML/ChenoChat/client/src/Components/SharedFunctions/Requests.js"],"sourcesContent":["// Authentication\r\n\r\nexport function requestAPI(method, url, data){\r\n    return new Promise((resolve, reject)=>{\r\n        console.log('start request');\r\n        let request = new XMLHttpRequest();\r\n        request.open(method, url);\r\n        request.setRequestHeader('Content-Type', 'application/json');\r\n        request.send(JSON.stringify(data));\r\n        request.onreadystatechange = function(){\r\n            console.log()\r\n            console.log('state change');\r\n        }\r\n        // request.onreadystatechange = ()=>{\r\n        //     console.log('??');\r\n        //     if(request.readyState === 4){\r\n        //         console.log('Finished');\r\n        //         console.log(request.status);\r\n        //         if(request.status === 201) resolve('Success!');\r\n        //         else reject('Failure :C');\r\n        //     }\r\n        // }\r\n        console.log('end request');\r\n    })\r\n}"],"mappings":"AAAA;;AAEA,OAAO,SAASA,UAAUA,CAACC,MAAM,EAAEC,GAAG,EAAEC,IAAI,EAAC;EACzC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAG;IAClCC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5B,IAAIC,OAAO,GAAG,IAAIC,cAAc,CAAC,CAAC;IAClCD,OAAO,CAACE,IAAI,CAACV,MAAM,EAAEC,GAAG,CAAC;IACzBO,OAAO,CAACG,gBAAgB,CAAC,cAAc,EAAE,kBAAkB,CAAC;IAC5DH,OAAO,CAACI,IAAI,CAACC,IAAI,CAACC,SAAS,CAACZ,IAAI,CAAC,CAAC;IAClCM,OAAO,CAACO,kBAAkB,GAAG,YAAU;MACnCT,OAAO,CAACC,GAAG,CAAC,CAAC;MACbD,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC/B,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAD,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC9B,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}